<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:picker="clr-namespace:Syncfusion.SfPicker.XForms;assembly=Syncfusion.SfPicker.XForms"
             xmlns:dateTimePicker="clr-namespace:Avails.Xamarin.Controls;assembly=Avails"
             xmlns:ListCollection="clr-namespace:System.Collections.Generic;assembly=mscorlib"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:viewmodels="clr-namespace:ThingsToRemember.ViewModels;assembly=ThingsToRemember"
             xmlns:media="clr-namespace:MediaManager.Forms;assembly=MediaManager.Forms"

             x:Class="ThingsToRemember.Views.EntryPage"
             x:DataType="viewmodels:EntryViewModel"
             >

    <ContentPage.Resources>
        <!--Define a visual state for the Selected state of the CollectionView-->
        <Style TargetType="StackLayout">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource AppPrimaryColor}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem x:Name="PreviousEntryToolbarItem"
                     IconImageSource="baseline_arrow_upward_black_48.png"
                     Clicked="PreviousEntryToolbarItem_OnClicked"
        />
        <ToolbarItem x:Name="NextEntryToolbarItem"
                     IconImageSource="baseline_arrow_downward_black_48.png"
                     Clicked="NextEntryToolbarItem_OnClicked"
        />
    </ContentPage.ToolbarItems>

    <StackLayout Margin="{DynamicResource PageMargin}">
        <!--The RowDefinitions for The media [4] are set dynamically-->
        <!-- See ShowHideMediaGrid()-->
        <!--                   0     1   2     3    4    5     6-->
        <!--                 Title Text D/T  Mood  Med  MedB Save-->
        <Grid x:Name="MainGrid"
              RowDefinitions="7*,  25*, 8*,  10*,  33*, 10*, 7*"  
              ColumnDefinitions="*, *"
              >
            <ScrollView Orientation="Both">
                <Editor x:Name="TitleEditor"
                        Placeholder="Title"
                        Text="{Binding Title}"
                        HeightRequest="50" 
                        HorizontalOptions="StartAndExpand"
                        Grid.Row="0"
                        Grid.ColumnSpan="2"
                        >
                    <Editor.Keyboard>
                        <Keyboard x:FactoryMethod="Create" >
                            <x:Arguments>
                                <KeyboardFlags>Suggestions,CapitalizeWord</KeyboardFlags>
                            </x:Arguments>
                        </Keyboard>
                    </Editor.Keyboard>
                </Editor>
            
            </ScrollView>
            <Editor x:Name="TextEditor"
                    Placeholder="Text"
                    Text="{Binding Text}"
                    AutoSize="TextChanges"
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    >
                <Editor.Keyboard>
                    <Keyboard x:FactoryMethod="Create">
                        <x:Arguments>
                            <KeyboardFlags>Suggestions,CapitalizeSentence</KeyboardFlags>
                        </x:Arguments>
                    </Keyboard>
                </Editor.Keyboard>
            </Editor>

            <DatePicker x:Name="CreateDatePicker"
                        Date="{Binding CreateDateTime.Date}"
                        HorizontalOptions="Start" 
                        IsVisible="True"
                        DateSelected="CreateDatePicker_OnDateSelected"
                        Grid.Row="2"
                        Grid.Column="0"
                        />

            <TimePicker x:Name="CreateTimePicker"
                        Time="{Binding CreateDateTime.TimeOfDay}"
                        HorizontalOptions="StartAndExpand"
                        IsVisible="True"
                        PropertyChanged="CreateTimePicker_OnPropertyChanged"
                        Grid.Row="2"
                        Grid.Column="1"
                        /> 
            
            <Label x:Name="MoodLabel"
                   Text="Tap here to select a Mood..."
                   FontSize="Medium"
                   Grid.Row="3"
                   Grid.ColumnSpan="2"
                    >
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="MoodLabel_OnTapped"/>
                </Label.GestureRecognizers>

            </Label>
            
            <!-- Margin="-15,0,5,0" -->
            <Grid x:Name="PhotoVideoGrid"
              ColumnDefinitions="Auto,*,*,*"
              RowDefinitions="10*,10*"
              
              HorizontalOptions="FillAndExpand"
              VerticalOptions="FillAndExpand"
              Grid.Row="4"
              Grid.ColumnSpan="2"
              >

            <Image x:Name="ImageFromCamera"
                   IsVisible="False"
                   VerticalOptions="StartAndExpand"
                   Aspect="AspectFit"
                   Grid.Row="0"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Grid.RowSpan="2"
                   />
            <xct:MediaElement x:Name="VideoMediaElement"
                              VerticalOptions="Start"
                              Grid.Row="0"
                              Grid.Column="2"
                              Grid.ColumnSpan="2"
                              />

            <media:VideoView x:Name="VideoFromCamera" 
                             IsVisible="False"
                             VerticalOptions="Start"
                             VideoAspect="AspectFit"
                             Grid.Row="0"
                             Grid.Column="2"
                             Grid.ColumnSpan="2"
                             />

            <Label x:Name="PlayLabel"
                   Text="Play"
                   IsVisible="False"
                   Grid.Row="1"
                   Grid.Column="2"
                   >
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="PlayLabel_OnTapped"/>
                </Label.GestureRecognizers>
            </Label>

            <Label x:Name="StopLabel"
                   Text="Stop"
                   IsVisible="False"
                   Grid.Row="1"
                   Grid.Column="3"
                   >
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="StopLabel_OnTapped"/>
                </Label.GestureRecognizers>
            </Label>

        </Grid>
            <Grid ColumnDefinitions="25*,75*"
                  HorizontalOptions="End"
                  Grid.Row="5"
            >
                <ImageButton x:Name="AddImageButton"
                             Source="camera.png"
                             HeightRequest="50"
                             HorizontalOptions="Start"
                             Margin="0, 0, 0, 0"
                             Grid.Column="0"
                             Clicked="AddImageButton_OnClicked"
                />
                <ImageButton x:Name="AddVideoButton"
                             Source="videocam_black_48.png"
                             HeightRequest="50"
                             HorizontalOptions="End"
                             Grid.Column="1"
                             Clicked="AddVideoButton_OnClicked"
                />
            </Grid>
            <Button x:Name="SaveButton"
                    Text="Save"
                    HeightRequest="50"
                    Clicked="OnSaveButtonClicked" 
                    Grid.Row="6"
                    Grid.ColumnSpan="2"
                    />
        </Grid>
        
        <picker:SfPicker x:Name="MoodPicker"
                         HorizontalOptions="StartAndExpand" 
                         HeaderText="Moods" 
                         ShowFooter="True"
                         ItemsSource="{Binding MoodEmoji}"
                         IsVisible="False"
                         OkButtonClicked="MoodPicker_OnOkButtonClicked"
                         CancelButtonClicked="MoodPicker_OnCancelButtonClicked"
                         Margin="15,0,15,0"
                         />
        
        <!--<object Margin="left,top,right,bottom"/>-->
        
        
        <!--BoxView   VerticalOptions="Center"
                   HorizontalOptions="Center"
                   HeightRequest="1"
                   WidthRequest="200"  
                   Color="Gray"/>-->

    </StackLayout>
</ContentPage>